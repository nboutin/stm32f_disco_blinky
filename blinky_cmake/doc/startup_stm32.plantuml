@startuml "stm32 startup sequence"
title STM32 startup sequence

skinparam MaxMessageSize 200
' hide footbox
hide unlinked

actor "User" as user
participant "MCU" as mcu
box "startup_stm32f4xx.s"
participant "Reset_Handler" as RH
end box
box "system_stm32f4xx.c"
participant "SystemInit" as SI
participant "SystemInit_ExtMemCtl" as SI_ExMem
end box
participant "libc" as libc
participant "main" as main

user -> mcu: Power On
mcu -> mcu: Copy program from Flash to RAM.If XiP is not enabled or supported
mcu -> RH: Jump to Reset_Handler
note over RH
Get _sidata, _sdata, _edata from linker script
Get _sbss, _ebss from linker script
end note

RH -> RH: Set Stack Pointer from _estack

note over RH
global and static variables
- .data = declared and explicitly initialized to a value
- .bss = declared but not explicitly initialized to a value
end note
RH -> RH: Copy data from Flash to RAM (.data)
RH -> RH: Clear .bss section

RH -> SI: Call SystemInit
SI -> SI: Set FPU settings
SI -> SI_ExMem: SystemInit_ExtMemCtl
return
SI -> SI: Configure Vector Table location
RH <-- SI

RH -> libc: Call __libc_init_array
libc -> libc: Call initialization functions of the C++ static constructors
RH <-- libc

RH -> main: Call main

note over of RH
Define Default_Handler (do infinite loop)
Define minimal vector table
Provide weak aliases for each Exception Handler
end note

@enduml
